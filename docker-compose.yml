#--------------------------------------------------------------------------------------------------------------------------#
#|                                                COMMON CONFIGURATIONS                                                   |#
#--------------------------------------------------------------------------------------------------------------------------#
# &mu-groups-ms-common-config is what's called an anchor in .yaml files. It lets us reuse everything that follows, so that 
# setting up the dev and prod profiles is easier
x-mu-groups-ms-common-config: &mu-groups-ms-common-config
  build:
    context: .
    args:
      MODE: ${mu_groups_ms_MODE:-release}

  container_name: ${mu_groups_ms_HOSTNAME:-mu_groups_ms}
  hostname: ${mu_groups_ms_HOSTNAME:-mu_groups_ms}

  # Ports exposed to OTHER SERVICES but NOT the HOST machine
  expose:
    - ${mu_groups_ms_INTERNAL_PORT:-8008}

  environment:
    # `DATABASE_URL` is constructed from the `mu_groups_db` variables, like this:
    #   postgresql://{user}:{password}@{hostname}:{port}/{db}?sslmode=disable
    DATABASE_URL: postgresql://${mu_groups_db_USER:-postgres}:${mu_groups_db_PASSWORD:-meetUN}@${mu_groups_db_HOSTNAME:-mu_groups_db}:${mu_groups_db_INTERNAL_PORT:-5432}/${mu_groups_db_DB:-meetun}?sslmode=disable
    PORT: ${mu_groups_ms_INTERNAL_PORT:-8008}
    LOCALHOST: ${mu_groups_ms_HOSTNAME:-mu_groups_ms}


x-mu-gruops-db-common-config: &mu-groups-db-common-config
  image: postgres:17-alpine

  # Hostname for which the service will be reachable
  hostname: ${mu_groups_db_HOSTNAME:-mu_groups_db}
  container_name: ${mu_groups_db_HOSTNAME:-mu_groups_db}

  # Ports exposed to OTHER SERVICES but NOT the HOST machine
  expose:
    - ${mu_groups_db_INTERNAL_PORT:-5432}

  restart: always
  environment:
    POSTGRES_USER: ${mu_groups_db_USER:-postgres}
    POSTGRES_PASSWORD: ${mu_groups_db_PASSWORD:-meetUN}
    POSTGRES_DB: ${mu_groups_db_DB:-meetun}
    PGPORT: ${mu_groups_db_INTERNAL_PORT:-5432}
  volumes:
    - mu-groups-db-data:/var/lib/postgresql/data

  command: ["postgres", "-c", "max_prepared_transactions=100", "-c", "max_connections=200"]



services:
#--------------------------------------------------------------------------------------------------------------------------#
#|                                                PROFILES FOR PRODUCTION                                                 |#
#--------------------------------------------------------------------------------------------------------------------------#
  # These profiles don't expose any ports to the host. The networks they are connected to are defined at the root of the
  # project in a Docker Compose override file
  mu_groups_ms_prod:
    <<: *mu-groups-ms-common-config
    depends_on:
      - mu_groups_db_prod
    profiles:
      - prod

  mu_groups_db_prod:
    <<: *mu-groups-db-common-config
    profiles:
      - prod

#--------------------------------------------------------------------------------------------------------------------------#
#|                                                PROFILES FOR DEVELOPMENT                                                |#
#--------------------------------------------------------------------------------------------------------------------------#
  # Groups microservice for development (connected to the default network and exposing its ports to the host)
  mu_groups_ms_dev:
    <<: *mu-groups-ms-common-config
    depends_on:
      - mu_groups_db_dev
    ports:
      - ${mu_groups_ms_EXTERNAL_PORT:-8008}:${mu_groups_ms_INTERNAL_PORT:-8008}
    networks:
      - default
    profiles:
      - dev

  mu_groups_db_dev:
    <<: *mu-groups-db-common-config
    profiles:
      - dev
    networks:
      - default


volumes:
  mu-groups-db-data: